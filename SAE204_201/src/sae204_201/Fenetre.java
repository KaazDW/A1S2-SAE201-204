/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sae204_201;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**VERSION FINALE
 *
 * @author p2100028
 */
public class Fenetre extends javax.swing.JFrame {

    /**
     * Creates new form Fenetre
     */
    
    java.sql.Statement stLogin ; 
    ResultSet rsLogin;
     DefaultTableModel model ;
     Connection conn;
    
     
     
    public Fenetre() throws SQLException, ClassNotFoundException{
        initComponents();
        
       //  JFreeChartExample chart = new JFreeChartExample("base de donnée", "test");
       // chart.pack();
       // chart.setVisible(true);
        
         
        try {

            Class.forName("com.mysql.jdbc.Driver");
            // db parameters
            String url = "jdbc:mysql://iutbg-lamp.univ-lyon1.fr:3306/EDT";
            String user = "p2100028";
            String password = "12100028";

            // create a connection to the database
            conn = DriverManager.getConnection(url, user, password);
            // more processing here
            // ...

            String strInsert = "SELECT * FROM Groupes";
             String SQLeffectiftotal = "select  SUM(effectif) from Groupes where idGroupe like 'S_'";

             stLogin = conn.createStatement();
            rsLogin = stLogin.executeQuery(strInsert);
        
             model = (DefaultTableModel) jTable1.getModel();

            while (rsLogin.next()) {
                String ligne[]={rsLogin.getString("idGroupe"),rsLogin.getString("effectif"),rsLogin.getString("type"),
                    rsLogin.getString("parent")};
                model.addRow(ligne);
                  System.out.println("---------------------------");
                System.out.println("Id groupe "+rsLogin.getString("idGroupe"));
                System.out.println("effectif "+rsLogin.getString("effectif"));
                System.out.println("type "+rsLogin.getString("type"));
                System.out.println("parent "+rsLogin.getString("parent"));
      
 
            }
            
           // rsLogin.close();
   
   
            //if (conn != null) {
            //    conn.close();
           // }
        } catch (ClassNotFoundException e) {
            System.out.println("Driver non chargé !" + e);

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    
            
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     /* private void ajouterButton(java.awt.event.ActionEvent evt){
        try{
            // ajout dans bd
            stLogin.executeUpdate("INSERT INTO Groupes (id,groupe,nom,type)" + idUI.getText()+ "," + groupeUI.getText()+ ","
                    + effUI.getText() + "," + typeUI.getText());
            
           
            // ajout dans interface
            String[]ligne={"" +(model.getRowCount() +1), idUI.getText(), groupeUI.getText(), effUI.getText(), typeUI.getText() };
            model.addRow(ligne);
        } catch(Exception ex){
            
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
      
      private void supprimerButton(java.awt.event.ActionEvent evt){
        
        int numRowsSelected = jTable1.getSelectedRow();
        
        if(numRowsSelected == -1){
            JOptionPane.showMessageDialog(this, "Selectionner une ligne");
            return;
            
        }
        
        String id=jTable1.getValueAt(numRowsSelected, 0).toString();
        
        try{
            //supp de la base
            stLogin.executeUpdate("DELETE FROM Groupes where id="+ id );
            
            //supp de l'interface
            model.removeRow(numRowsSelected);
            
            
        }catch(SQLException ex){
            
             Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
      
      */
    
     /* private void modifButton(java.awt.event.ActionEvent evt){
        
         int numRowsSelected = jTable1.getSelectedRow();
          if(numRowsSelected == -1){
            JOptionPane.showMessageDialog(this, "Selectionner une ligne");
            return;
            
        }
          
          String id=jTable1.getValueAt(numRowsSelected, 0).toString();
          String groupe= jTable1.getValueAt(numRowsSelected, 1).toString();
          String effectif= jTable1.getValueAt(numRowsSelected, 2).toString();
          String type= jTable1.getValueAt(numRowsSelected, 3).toString();
          
          
           try{
            //supp de la base
            stLogin.executeUpdate("UPDATE Groupes SET id="+ id + ", groupe= "+ groupe + ", effectif="+ effectif + ", type=" + type);
            
            //supp de l'interface
            model.removeRow(numRowsSelected);
            
            
        }catch(SQLException ex){
            
             Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }
      
      */
      
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        CherchButton = new javax.swing.JButton();
        SuppButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        elemButton = new javax.swing.JTextField();
        choixUI = new javax.swing.JComboBox<>();
        modifButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idUI = new javax.swing.JTextField();
        groupeUI = new javax.swing.JTextField();
        effUI = new javax.swing.JTextField();
        typeUI = new javax.swing.JTextField();
        ajouterButton = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        CherchButton.setText("Chercher");
        CherchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CherchButtonActionPerformed(evt);
            }
        });

        SuppButton.setText("Supprimer");
        SuppButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuppButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "idGroupe", "effectif", "type", "parent"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        choixUI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "idGroupe", "type", "effectif", "parent" }));

        modifButton.setText("Mise à jour ");
        modifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("idGroupe");

        jLabel2.setText("parent");

        jLabel3.setText("effectif");

        jLabel4.setText("type");

        groupeUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupeUIActionPerformed(evt);
            }
        });

        ajouterButton.setText("ajouter");
        ajouterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SuppButton)
                        .addGap(41, 41, 41)
                        .addComponent(modifButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CherchButton)
                                .addGap(18, 18, 18)
                                .addComponent(elemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(choixUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(idUI))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(typeUI))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(groupeUI, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(effUI))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(ajouterButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CherchButton)
                    .addComponent(elemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choixUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SuppButton)
                    .addComponent(modifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(idUI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(groupeUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(effUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(typeUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(ajouterButton)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupeUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupeUIActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_groupeUIActionPerformed

    private void ajouterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterButtonActionPerformed
        // ajout dans bd
        // String test= "INSERT INTO Groupes (idGroupe,effectif,type,parent) VALUES ('" + idUI.getText()+ "','" + groupeUI.getText()+ "','"
        //         + effUI.getText() + "','" + typeUI.getText()+ "')";
        //  stLogin.executeUpdate(test);
        
        
        // ajout dans interface
        String[]ligne={idUI.getText(), groupeUI.getText(), effUI.getText(), typeUI.getText() };
        model.addRow(ligne);
        if(stLogin!=null){
            try {
                stLogin.close();
            } catch (SQLException ex) {
                Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(conn!=null){
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(rsLogin!=null){
            try {
                rsLogin.close();
            } catch (SQLException ex) {
                Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         
         
    }//GEN-LAST:event_ajouterButtonActionPerformed

    private void SuppButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuppButtonActionPerformed
        // TODO add your handling code here:
        int numRowsSelected = jTable1.getSelectedRow();
        
        if(numRowsSelected == -1){
            JOptionPane.showMessageDialog(this, "Selectionner une ligne");
            return;
            
        }
        
        String id=jTable1.getValueAt(numRowsSelected, 0).toString();
        
        //supp de la base
        //stLogin.executeUpdate("DELETE FROM Groupes where idGroupe="+ id );
        
        //supp de l'interface
        model.removeRow(numRowsSelected);
        
        
    }//GEN-LAST:event_SuppButtonActionPerformed

    private void modifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifButtonActionPerformed
        // TODO add your handling code here:
        
        int numRowsSelected = jTable1.getSelectedRow();
          if(numRowsSelected == -1){
            JOptionPane.showMessageDialog(this, "Selectionner une ligne");
            return;
            
        }
          
          String id=jTable1.getValueAt(numRowsSelected, 0).toString();
          String groupe= jTable1.getValueAt(numRowsSelected, 1).toString();
          String effectif= jTable1.getValueAt(numRowsSelected, 2).toString();
         // String type= jTable1.getValueAt(numRowsSelected, 3).toString();
         //supp de la base
         //   stLogin.executeUpdate("UPDATE Groupes SET idGroupe="+ id + ", effectif= "+ groupe + ", type="+ effectif );
         
         //supp de l'interface
         model.removeRow(numRowsSelected);
          
        
    }//GEN-LAST:event_modifButtonActionPerformed

    private void CherchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CherchButtonActionPerformed
        // TODO add your handling code here:
        try{
            while(model.getRowCount()!=0)model.removeRow(0);
            String choix=choixUI.getSelectedItem().toString();
            
             String elem=elemButton.getText();
             ResultSet resultset;
                
                if(elem.isEmpty()){
                    resultset=stLogin.executeQuery("select * from Groupes");
                }else{
                    System.out.println(choix);
                    System.out.println(elem);
                    String test= "SELECT * FROM Groupes WHERE" + choix + " = '"+elem +"' ";
                    resultset=stLogin.executeQuery(test);
                    
                }
                while(resultset.next()){
            String ligne[]={resultset.getString("idGroupe"),resultset.getString("effectif"),resultset.getString("type"),resultset.getString("parent")};
                model.addRow(ligne);
                
                }
        }catch(Exception ex){
            
             Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_CherchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Fenetre().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CherchButton;
    private javax.swing.JButton SuppButton;
    private javax.swing.JButton ajouterButton;
    private javax.swing.JComboBox<String> choixUI;
    private javax.swing.JTextField effUI;
    private javax.swing.JTextField elemButton;
    private javax.swing.JTextField groupeUI;
    private javax.swing.JTextField idUI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modifButton;
    private javax.swing.JTextField typeUI;
    // End of variables declaration//GEN-END:variables
}
